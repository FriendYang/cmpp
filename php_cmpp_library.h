/**
 * Generated by build-library.php, Please DO NOT modify!
 */

static char* cmpp_library_source_cmpp2 =
    "\n"
    "\n"
    "namespace Swoole\\Coroutine;\n"
    "\n"
    "class Cmpp2\n"
    "{\n"
    "\n"
    "    private $cmpp = NULL;\n"
    "    private $setting = [];\n"
    "    private $sendChannel = NULL;\n"
    "//    private $recvCid = -1;\n"
    "//    private $submitting = 0;\n"
    "//    private $recvWating = 0;\n"
    "//    private $inbatch = 0;\n"
    "\n"
    "    public function __construct($set)\n"
    "    {\n"
    "        $this->setting = $set;\n"
    "    }\n"
    "\n"
    "    public function login($ip, $port, $uname, $pwd, float $timeout = -1)\n"
    "    {\n"
    "        if (is_null($this->cmpp)) {\n"
    "            $this->cmpp = new \\Swoole\\Coroutine\\Cmpp($this->setting);\n"
    "            $ret = $this->cmpp->dologin($ip, $port, $uname, $pwd, $timeout);\n"
    "            if (is_array($ret) && $ret['Status'] == 0) {\n"
    "                $this->sendChannel = new \\Swoole\\Coroutine\\Channel(3);\n"
    "                //心跳协程\n"
    "                \\Swoole\\Coroutine::create(function () {\n"
    "                    while (1) {\n"
    "                        \\Swoole\\Coroutine::sleep($this->setting['active_test_interval']);\n"
    "                        if (is_null($this->cmpp)) {\n"
    "                            break; //结束协程\n"
    "                        }\n"
    "                        $pingData = $this->cmpp->activeTest();\n"
    "                        if ($pingData) {\n"
    "                            $this->sendChannel->push($pingData);\n"
    "                        }\n"
    "                    }\n"
    "                });\n"
    "                //专门的发送协程\n"
    "                \\Swoole\\Coroutine::create(function () {\n"
    "                    while (1) {\n"
    "                        $pack = $this->sendChannel->pop();\n"
    "                        if (is_null($this->cmpp)) {\n"
    "                            break; //结束协程\n"
    "                        }\n"
    "                        $this->cmpp->sendOnePack($pack);\n"
    "                    }\n"
    "                });\n"
    "                return $ret;\n"
    "            } else {\n"
    "                $this->errMsg = $this->cmpp->errMsg;\n"
    "                $this->errCode = $this->cmpp->errCode;\n"
    "                $this->cmpp = null;\n"
    "                return $ret;\n"
    "            }\n"
    "        } else {\n"
    "            $this->errMsg = \"the connection is connected\";\n"
    "            $this->errCode = CMPP_CONN_CONNECTED;\n"
    "            return FALSE;\n"
    "        }\n"
    "    }\n"
    "\n"
    "    private function realSubmit($mobile, $unicode_text, $ext, float $timeout = -1, int $udhi = -1, int $smsTotalNumber = -1, int $i = -1)\n"
    "    {\n"
    "        again:\n"
    "        $ret = $this->cmpp->submit($mobile, $unicode_text, $ext, $udhi, $smsTotalNumber, $i);\n"
    "        if ($ret === FALSE) {\n"
    "            $this->syncErr();\n"
    "            $this->cmpp = null;\n"
    "            return FALSE;\n"
    "        }\n"
    "        if (is_double($ret)) {\n"
    "//            if ($this->inbatch) {//证明submitArr触发的realSubmit\n"
    "//                $this->submitting = 0;\n"
    "//                if ($this->recvWating) {\n"
    "//                    \\Swoole\\Coroutine::resume($this->recvCid);\n"
    "//                }\n"
    "//                \\Swoole\\Coroutine::sleep($ret);\n"
    "//                $this->submitting = 1;\n"
    "//            } else {\n"
    "            \\Swoole\\Coroutine::sleep($ret);\n"
    "//            }\n"
    "            goto again;\n"
    "        }\n"
    "\n"
    "        $cRet = $this->sendChannel->push($ret['packdata'], $timeout);\n"
    "        if ($cRet === FALSE) {\n"
    "            $this->errCode = $this->sendChannel->errCode;\n"
    "            return FALSE;\n"
    "        }\n"
    "        return $ret['sequence_id'];\n"
    "    }\n"
    "\n"
    "    /*\n"
    "     * array(\n"
    "     *   [0] => array(\n"
    "     *    'mobile'=>'1581142343',\n"
    "     *    'text'=>'测试短信',\n"
    "     *    'ext'=>'扩展码',\n"
    "     *    'udhi'=>'如果是长短信 这里需要填udhi的序列号',\n"
    "     *    )\n"
    "     * )\n"
    "     */\n"
    "    /*\n"
    "     * submit优先于recv里面逻辑\n"
    "     * 如果撞上了，recv yield，恢复方式有2种，1是submit超过限速sleep时候唤醒，2是submitArr函数结束。\n"
    "     */\n"
    "\n"
    "//    public function submitArr($arr, $timeout = -1)\n"
    "//    {\n"
    "//        $this->submitting = $this->inbatch = 1;\n"
    "//        $seqArr = [];\n"
    "//        foreach ($arr as $msg) {\n"
    "//            $tmp = $this->submit($msg['mobile'], $msg['text'], $msg['ext'], $timeout, $msg['udhi']);\n"
    "//            if ($tmp === false) {\n"
    "//                $tmp = [FALSE];\n"
    "//            }\n"
    "//            $seqArr = array_merge($tmp, $seqArr);\n"
    "//        }\n"
    "//        $this->submitting = $this->inbatch = 0;\n"
    "//        if ($this->recvWating) {\n"
    "//            \\Swoole\\Coroutine::resume($this->recvCid);\n"
    "//        }\n"
    "//        return $seqArr;\n"
    "//    }\n"
    "\n"
    "    public function submit($mobile, $text, $ext, float $timeout = -1, int $udhi = -1)\n"
    "    {\n"
    "        $smsContentLength = mb_strlen($text, 'UTF-8');\n"
    "        if ($smsContentLength <= 70) { // 短短信\n"
    "            $unicode_text = mb_convert_encoding($text, \"UCS-2BE\", \"UTF-8\");\n"
    "            $ret = $this->realSubmit($mobile, $unicode_text, $ext, $timeout);\n"
    "            if ($ret === FALSE) {\n"
    "                return FALSE;\n"
    "            }\n"
    "            $seqArr[] = $ret;\n"
    "        } else { //长短信时\n"
    "            if ($udhi == -1 || $udhi >= 255) {\n"
    "                $this->errMsg = \"udhi param error ($udhi)\";\n"
    "                return FALSE;\n"
    "            }\n"
    "            $seqArr = [];\n"
    "            $smsTotalNumber = ceil($smsContentLength / 67);\n"
    "            for ($i = 0; $i < $smsTotalNumber; $i++) {\n"
    "                $content = mb_substr($text, $i * 67, 67, 'UTF-8');\n"
    "                $unicode_text = mb_convert_encoding($content, \"UCS-2BE\", 'UTF-8');\n"
    "                $ret = $this->realSubmit($mobile, $unicode_text, $ext, $timeout, $udhi, $smsTotalNumber, $i + 1);\n"
    "                if ($ret === FALSE) {\n"
    "                    return FALSE;\n"
    "                }\n"
    "                $seqArr[] = $ret;\n"
    "            }\n"
    "        }\n"
    "        return $seqArr;\n"
    "    }\n"
    "\n"
    "    public function recv(float $timeout = -1)\n"
    "    {\n"
    "//        if ($this->recvCid == -1) {\n"
    "//            $this->recvCid = \\Swoole\\Coroutine::getCid();\n"
    "//        }\n"
    "        again:\n"
    "\n"
    "//        if ($this->submitting === 1) {\n"
    "//            $this->recvWating = 1;\n"
    "//            \\Swoole\\Coroutine::suspend();\n"
    "//            $this->recvWating = 0;\n"
    "//        }\n"
    "        $ret = $this->cmpp->recvOnePack($timeout);\n"
    "        if ($ret === false) {\n"
    "            $this->syncErr();\n"
    "            if ($this->errCode === CMPP_CONN_BROKEN) {\n"
    "                $this->cmpp = null;\n"
    "            }\n"
    "            return FALSE;\n"
    "        }\n"
    "        switch ($ret['Command']) {\n"
    "            case CMPP2_ACTIVE_TEST_RESP:\n"
    "            case CMPP2_TERMINATE_RESP://对端主动断开给回复的包\n"
    "                $this->sendChannel->push($ret[\"packdata\"]);\n"
    "                goto again;\n"
    "            case CMPP2_DELIVER:\n"
    "                $this->sendChannel->push($ret[\"packdata\"]);\n"
    "                unset($ret[\"packdata\"]);\n"
    "                return $ret;\n"
    "            case CMPP2_SUBMIT_RESP:\n"
    "                return $ret;\n"
    "            default :\n"
    "                throw new \\Exception(\"error command \" . $ret['Command']);\n"
    "        }\n"
    "    }\n"
    "\n"
    "    private function syncErr()\n"
    "    {\n"
    "        $this->errCode = $this->cmpp->errCode;\n"
    "        $this->errMsg = $this->cmpp->errMsg;\n"
    "    }\n"
    "\n"
    "    /*\n"
    "     * 发送term包 收到回复的term resp后 recv返回false 断开连接\n"
    "     */\n"
    "\n"
    "    public function logout()\n"
    "    {\n"
    "        $packdata = $this->cmpp->logout();\n"
    "        $this->sendChannel->push($packdata);\n"
    "    }\n"
    "\n"
    "}\n"
    "\n"
    "class_alias(\"Swoole\\\\Coroutine\\\\Cmpp2\", \"Co\\\\Cmpp2\", true);\n";

void php_cmpp_load_library();

